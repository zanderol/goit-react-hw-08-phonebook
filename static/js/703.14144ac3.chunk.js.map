{"version":3,"file":"static/js/703.14144ac3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\",\"form\":\"ContactForm_form__dhl+T\",\"lable\":\"ContactForm_lable__W7bCm\"};","export const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n","import css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const onInputChange = event => {\n    const { name, value } = event.currentTarget;\n    setContact(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const contactName = contacts.map(contact => contact.name);\n    if (!contactName.includes(contact.name)) {\n      dispatch(\n        addContact({\n          name: contact.name,\n          number: contact.number,\n        })\n      );\n    } else {\n      alert(`${contact.name} is already in contacts.`);\n    }\n    setContact({ name: '', number: '' });\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={onSubmit}>\n        <label className={css.lable}>\n          Name\n          <input\n            className={css.inputContact}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={contact.name}\n            onChange={onInputChange}\n          />\n        </label>\n        <label className={css.lable}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={contact.number}\n            onChange={onInputChange}\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"remove\":\"ContactList_remove__eupmf\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredArray = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.list}>\n      {filteredArray.map(({ id, name, number }) => (\n        <li key={id} className={css.item}>\n          {name + ': ' + number}\n          <button\n            type=\"button\"\n            className={css.remove}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setValue } from 'redux/contacts/contactsSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = event => {\n    const value = event.currentTarget.value.toLowerCase();\n    dispatch(setValue(value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input type=\"text\" onChange={onChange} />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={{ margin: '0 auto', width: '333px' }}>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {!isLoading && !error && <ContactList />}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useState","name","number","contact","setContact","dispatch","useDispatch","useSelector","onInputChange","event","currentTarget","value","prevState","className","css","onSubmit","preventDefault","contactName","map","includes","alert","addContact","type","pattern","title","required","onChange","ContactList","filteredArray","toLowerCase","id","onClick","deleteContact","Filter","setValue","useEffect","fetchContacts","style","margin","width"],"sourceRoot":""}