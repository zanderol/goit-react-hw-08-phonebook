{"version":3,"file":"static/js/367.22d7fbf0.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding: 15px;\n  background-color: #cca8e9;\n  border-radius: 10px 10px 0 0;\n`\nexport const List = styled.ul`\n  padding: 20px;\n  background-color: #cadefc;\n  border-radius: 0 0 10px 10px;\n  border: 3px solid #cca8e9;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n\nexport const ListItem = styled.ul`\n  padding: 20px;\n  display: grid;\n  grid-template-columns: 70% 30%;\n  /* justify-content: space-evenly; */\n  border: 3px solid #cca8e9;\n`\n\nexport const ParagraphText = styled.span`\n  margin-left: 40px;\n  display: inline-block;\n  min-width: 110px;\n  font-weight: bold;\n`\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","// export const selectFilter = state => state.filter.value;\nexport const selectFilter = state => state.filter;","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding: 15px;\n  background-color: #cca8e9;\n  border-radius: 10px 10px 0 0;\n`\nexport const List = styled.ul`\n  padding: 20px;\n  background-color: #cadefc;\n  border-radius: 0 0 10px 10px;\n  border: 3px solid #cca8e9;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n\nexport const ListItem = styled.ul`\n  padding: 20px;\n  display: grid;\n  grid-template-columns: 70% 30%;\n  /* justify-content: space-evenly; */\n  border: 3px solid #cca8e9;\n`\n\nexport const ParagraphText = styled.span`\n  margin-left: 40px;\n  display: inline-block;\n  min-width: 110px;\n  font-weight: bold;\n`\n","import { ListItem, ParagraphText } from './ContactItem.styled';\nimport { Button } from '../App.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleClick = () => {\n    setIsDeleting(true);\n\n    dispatch(deleteContact(id)).then(res => {\n      if (res.error) {\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  return (\n    <ListItem>\n      <div style={{ textAlign: 'left' }}>\n        <p>\n          <ParagraphText>Contact name:</ParagraphText> {name}\n        </p>\n        <p>\n          <ParagraphText>Tel. number:</ParagraphText> {number}\n        </p>\n      </div>\n      <Button type=\"button\" onClick={handleClick} disabled={isDeleting}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n","import { List, Title } from './ContactList.styled';\n\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      <Title>Contact List</Title>\n      <List>\n        {visibleContacts.map(contact => {\n          return <ContactItem key={contact.id} {...contact} />;\n        })}\n      </List>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding: 15px;\n  background-color: #cca8e9;\n  border-radius: 10px 10px 0 0;\n`\n\nexport const Form = styled.form`\n  padding: 20px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #cadefc;\n  border-radius: 0 0 10px 10px;\n  border: 3px solid #cca8e9;\n`\n\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`\n\nexport const LabelTitle = styled.span`\n  display: inline-block;\n  margin: 5px;\n  text-align: start;\n  min-width: 80px;\n  font-weight: bold;\n`\n\nexport const Input = styled.input`\n  border: 1px solid #cca8e9;\n  height: 20px;\n  &:hover,\n  &:focus {\n    outline: 1px solid #cca8e9;\n  }\n`","import { useState } from 'react';\nimport {\n  Form,\n  Title,\n  LabelGroup,\n  LabelTitle,\n  Input,\n} from './ContactForm.styled';\nimport { Button } from '../App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts.some(\n      contact => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      toast.success(`${name} is already in contacts.`, {\n        style: {\n          border: '1px solid #cca8e9',\n          padding: '16px',\n        },\n        icon: '⚠',\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <Title>Add contact</Title>\n\n      <Form onSubmit={onFormSubmit}>\n        <LabelGroup>\n          <label htmlFor=\"\">\n            <LabelTitle>Name:</LabelTitle>\n            <Input\n              onChange={handleChange}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label htmlFor=\"\">\n            <LabelTitle>Number:</LabelTitle>\n            <Input\n              onChange={handleChange}\n              value={number}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n        </LabelGroup>\n        <Button type=\"submit\">Add</Button>\n      </Form>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding: 15px;\n  background-color: #cca8e9;\n  border-radius: 10px 10px 0 0;\n`\n\nexport const Content = styled.div`\n  padding: 20px;\n  background-color: #cadefc;\n  border-radius: 0 0 10px 10px;\n  border: 3px solid #cca8e9;\n`\n\nexport const Input = styled.input`\n  border: 1px solid #cca8e9;\n  height: 20px;\n  &:hover,\n  &:focus {\n    outline: 1px solid #cca8e9;\n  }\n`\n\nexport const LabelTitle = styled.span`\n  display: inline-block;\n  margin: 5px;\n  text-align: start;\n  min-width: 80px;\n  font-weight: bold;\n`","import { Content, Title, Input, LabelTitle } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div>\n      <Title>Find contact</Title>\n      <Content>\n        <LabelTitle>Find contact:</LabelTitle>\n        <Input\n          type=\"text\"\n          value={filter}\n          onChange={evt => {\n            const action = changeFilter(evt.target.value);\n            dispatch(action);\n          }}\n        />\n      </Content>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { requestContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { Filter } from '../components/Filter/Filter';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && !error && (\n        <div>\n          <InfinitySpin width=\"200\" color=\"#4fa94d\" />\n        </div>\n      )}\n      {!isLoading && contacts.length > 0 && (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n      {!isLoading && contacts.length === 0 && <p>Please, add contact</p>}\n    </>\n  );\n}\n"],"names":["Title","styled","List","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ListItem","ParagraphText","ContactItem","id","name","number","dispatch","useDispatch","useState","isDeleting","setIsDeleting","style","textAlign","type","onClick","deleteContact","then","res","disabled","ContactList","useSelector","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","map","Form","LabelGroup","LabelTitle","Input","ContactForm","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","some","toast","border","padding","icon","newContact","addContact","htmlFor","onChange","pattern","title","required","Content","Filter","evt","action","changeFilter","target","Contacts","useEffect","requestContacts","Helmet","width","color","length"],"sourceRoot":""}